
<html>
    <head>
        <title>Pimp your tests</title>
        <style type="text/css">
            body {
                padding: 0;
                margin: 0;
                background: #FFF;
                /*font: 100.01% / 1.3 Verdana, Arial, sans-serif;*/
				font-family: Verdana, Arial, sans-serif;
				font-size: 80%;
            }

           /*
            h1 {
                font: lighter 200% "Trebuchet MS", Arial sans-serif;
                color: #208BE1
            }

            h1, p {
                margin: 0;
                padding: 10px 20px
            }
             */
      
</style>
      <script type="text/javascript" src="/scripts/pimp_scripts.js"></script>
       <script type="text/javascript" src="/scripts/prototype.js"></script>
      <script type="text/javascript" src="/scripts/scriptaculous.js"></script>
      <script type="text/javascript" src="/scripts/dragdrop.js"></script>
      <script type="text/javascript" src="/scripts/effects.js"></script>
      <script type="text/javascript" src="/scripts/controls.js"></script>
       <link rel="StyleSheet" href="/stylesheets/active_sheet.css" type="text/css" media="screen"/>
       <script type="text/javascript">

          var hidden = new Array();
          var test_edit = new Array();
          var prog_indicator = "";

          //Set up the global responder for showing/hiding progress indicators
          //Remember to make sure that prog_indicator is set to the id of the element
          //to show prior to initiating the AJAX request.
          Ajax.Responders.register({
              onCreate: function(){
                  Element.show(prog_indicator);
              },
              onComplete: function(){
                  Element.hide(prog_indicator);
              }
          });
            function loadPimpElements(){
                nested = document.getElementsByClassName('nested');
                for(var i = 0; i < nested.length; i++){
                    hidden[nested[i].id] = true;
                }
                //add the add page form id
                hidden["page_name_div"] = true;

               //find all the 'insert' divs
                var inserts = document.getElementsByClassName('insert_div');
                var insert_containers = document.getElementsByClassName('insert_point');

                //find all the insert items
                var insert_items = document.getElementsByClassName('insert_list_item');

                //Now, find all the textarea and header forms
                var text_divs = document.getElementsByClassName('add_text_container');
                var header_divs = document.getElementsByClassName('add_header_container');

                //find all the cancel buttons
                var cancel_text = document.getElementsByClassName('cancel_text');
                var cancel_header = document.getElementsByClassName('cancel_header');

                //find all the add_header and add_text forms
                var add_text_forms = document.getElementsByClassName('add_text_form');
                var add_header_forms = document.getElementsByClassName('add_header_form');


                //Add the insert divs, header divs, and text area divs to the hidden array.
                //also give the containers on click handlers
                var i = 0;
                for(i = 0; i < inserts.length; i++){
                  hidden[inserts[i].id] = true;
                  hidden[text_divs[i].id] = true;
                  hidden[header_divs[i].id] = true;
                  insert_containers[i].onmouseover = showInsert;
                  insert_containers[i].onmouseout = hideInsert;
                  cancel_text[i].onclick = displayWidgetHandler;
                  cancel_header[i].onclick = displayWidgetHandler;
                }


                for(i = 0; i < insert_items.length; i++){
                    insert_items[i].onclick = displayWidgetHandler;
                }

                /*add ajax Updaters to the forms
                for(i = 0; i <= add_text_forms.length -1; i++){
                    add_text_forms[i].onsubmit = function(){
                       new Ajax.Updater(header_divs[i].id,'/<%= @location %>/add_text',{
                                          parameters: $(add_text_forms[i].id).serialize(true),
                                          method: 'post',
										  evalScripts: true,
                                          onComplete: loadDomElments(),
                                          insertion: 'after'});
						//Hide the form
						displayWidget(text_divs[i].id);
      					return false;
                    }
                }

                for(i = 0; i<= add_header_forms.length ; i++){
                    add_header_forms[i].onsubmit = function(){
                        new Ajax.Updater(header_divs[i].id,'/<%= @location %>/add_header',{
                                          parameters: $(add_header_forms[i].id).serialize(true),
                                          method: 'post',
										  evalScripts: true,
                                          onComplete: loadDomElments(),
                                          insertion: 'after'});
						//Hide the form
						displayWidget(header_divs[i].id);
      					return false;
                    }
                }

                */


            }

            window.onload = loadPimpElements;

         function deleteElement(elem){
                //create an Ajax POST request that will delete the element from the server
                //and then update the entire content area
             //onComplete: loadPimpElements
                var params = {element: elem};
                var url = "/<%= @location %>/delete_element";
                new Ajax.Request(url,{
                    method: 'post',
                    parameters: params
                });

             //remove the container from the dom
             var content = get_object('content');
             var container = get_object(elem);
             content.removeChild(container);
             content.removeChild(get_object("insert_"+elem+"_container"));
             content.removeChild(get_object("insert_"+elem+"_text"));
             content.removeChild(get_object("insert_"+elem+"_header"));

            }


            function editTable(container,elem){
                //alert("Container is " + container + "\n Element is " + elem);
                new Ajax.Updater(container,"/<%= @location %>/edit_table",{
                    method: "get",
                    parameters: {element: elem},
                    evalScripts: true
                });

                return false;
            }

           function cancelEdit(container,elem){

               new Ajax.Updater(container,"/<%= @location %>/cancel_edit",{
                   method: "get",
                   parameters: {element: elem},
                   evalScripts: true
               });

               return false;
           }

            function addTableRow(container,i){
                 new Ajax.Updater(container,"/<%= @location %>/add_table_row",{
                    method: "post",
                    parameters: {element: container, index: i},
                    evalScripts: true
                });

                return false;
            }

            function delTableRow(container,i){
                new Ajax.Updater(container,"/<%= @location %>/delete_table_row",{
                    method: "post",
                    parameters: {element: container, index: i},
                    evalScripts: true
                });

                return false;
            }

            function saveTable(form,container){
                prog_indicator = container + "_progress";
                //alert("Submitting Form " + form + "\n to update " + container); 
                new Ajax.Updater(container,"/<%= @location %>/save_table",{
                    method: "post",
                    parameters: $(form).serialize(true),
                    evalScripts: true,
                    onLoading: function(){
                        $(prog).show();
                    }

                });

                prog_indicator = "";
                return false;
            }

           
       </script>

	
    </head>

<body>

<div id="header">
<h2 id="title" class="white-text">Pimp Those Tests!</h2>

    <div id="menu">
        <ul id="nav">
            <li><a onclick="javascript: setBackground(this,'page_name_div'); displayWidget('page_name_div');return false;">Add Page</a></li>
            <li><a>Run All</a></li>
            <li><a>Config</a></li>
            <li><a>Variables</a></li>
            <li><a>Properties</a></li>
        </ul>
    </div>
     
  </div>

    <!-- This div contains the form for collecting the new page name -->
      <div id="page_name_div" style="display: none;">
        <form name="page_name_form" id="page_name_form" method="post" action="/<%= @location%>/add_page">
          <label for="page_name">Page Name:</label><input type="text" name="page_name" value=""/>
          <input type="submit" value="Add Page"/>
        </form>
      </div>

    <div class="left">
        <%= @page_list %>
        <%= fixtures %>
		<form action="/fixture" method="post" accept-charset="utf-8" enctype='multipart/form-data'>
			<input type="file" name="file_info" id='userfile'>
			<input type="hidden" name="filename" value="" id="remotename" onChange="file_onchange()">
			<input type="submit" name="btn_file" value="Upload" id="btn_file">
			
		</form>
    </div>
    <div id="breadcrumb">
        <%= breadcrumb %>
    </div> 
    <div id="content" class="content">
        <%= @html %>
    </div>
    <script type="text/javascript">
        function addNewFixture(elem, drop, event){
                        //get the class and method
                        var info = elem.id.split("\:");
                        var params = {fixture: info[0], method: info[1], position: "last"}; //will always be last for now.break
                        var url = "\/<%= @location %>\/add_fixture";
                        new Ajax.Updater('content',url,
                                             {
                                              method: 'post',
                                              parameters: params,
                                              onLoading: showLoad,
                                              onComplete: hideLoad,
                                              insertion: 'bottom'
                                             }
                                );
                    }
      
      Droppables.add('content', {hoverclass: 'hovering', accept: 'draggable', onDrop: addNewFixture});
    </script>
</body>

</html>
